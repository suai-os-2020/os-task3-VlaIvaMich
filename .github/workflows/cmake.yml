name: CMake

on: [push]
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
    
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    strategy:
     matrix:
         include:
             - compiler: "msvc15"
               generator: "Visual Studio 14 2015"
             - compiler: "MinGW"
               generator: "MinGW Makefiles"
      
    steps:
    - uses: actions/checkout@v2
      
    - name: Before build
      shell: bash
      run: |
          cd ${{github.workspace}}
          mkdir _build
          cd _build
          
          
    - name: Configure CMake
      env: 
          GENERATOR: ${{matrix.generator}}
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake -G "$GENERATOR" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -Dgtest_disable_pthreads=ON ..

    - name: for MinGW
      shell: bash
      if: matrix.compiler=='MinGW'
      run: | 
        set PATH=C:\mingw-w64\i686-5.3.0-posix-dwarf-rt_v4-rev0\mingw32\bin;%PATH%
        rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
      
    - name: PreBuildTest
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        ls
        cd _build
        ls
        cd _test
        ls
        cd _gtest
  
    - name: Build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test for MinGW
      shell: bash
      if: matrix.compiler=='msvc15'
      run: ..\_build\test\%CONFIGURATION%\runTests.exe
      
    - name: Test for msvc15
      shell: bash
      if: matrix.compiler=='msvc15'
      run: ..\_build\test\%CONFIGURATION%\runTests.exe
   
